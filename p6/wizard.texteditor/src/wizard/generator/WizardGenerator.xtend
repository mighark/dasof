/*
 * generated by Xtext 2.15.0
 */
package wizard.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import wizard.Wizard
import wizard.BotonNavegar
import wizard.BotonCerrar
import wizard.Pagina
import wizard.BotonMensaje

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class WizardGenerator extends AbstractGenerator {
	
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		for(wizard: resource.allContents.toIterable.filter(Wizard)) {
			fsa.generateFile('src/wizard/Wizard.java', compile(wizard))
			fsa.generateFile('src/listeners/ChangePageListener.java', compileListener(wizard))
		}
		fsa.generateFile('src/main/Main.java', compileMain)
		fsa.generateFile('src/listeners/CloseWizardListener.java', compileClose())
		fsa.generateFile('src/listeners/ShowMessageListener.java', compileMessage())
	}
	
	def compile(Wizard wizard) {
		'''
		package wizard;
		
		import java.awt.BorderLayout;
		import java.awt.CardLayout;
		import java.awt.GridBagConstraints;
		import java.awt.GridBagLayout;
		
		import javax.swing.JButton;
		import javax.swing.JCheckBox;
		import javax.swing.JFrame;
		import javax.swing.JLabel;
		import javax.swing.JPanel;
		import javax.swing.JTextField;
		
		import listeners.ChangePageListener;
		import listeners.CloseWizardListener;
		import listeners.ShowMessageListener;
		
		public class Wizard extends JFrame {
			«var i = 0»
			«FOR pagina: wizard.paginas»
				public static final String PAGE_«i» = "«pagina.name»";
				//«i = i + 1»
			«ENDFOR»
			
			private JPanel wizard = new JPanel();
			private CardLayout layout = new CardLayout();
			//«i = 0»
			«FOR pagina: wizard.paginas»
				«var j = 0»
				«FOR texto: pagina.camposTexto» 
					private JTextField text«i»_«j»; 
					//«j = j + 1»
				«ENDFOR»
				//«i = i + 1»
			«ENDFOR»	
			//«i = 0»
			«FOR pagina: wizard.paginas»
				«var j = 0»
				«FOR casilla: pagina.casillasVerif» 
					private JCheckBox check«i»_«j»; 
					//«j = j + 1»
				«ENDFOR»
				//«i = i + 1»
			«ENDFOR»
			
			//«i = 0»
			«FOR pagina: wizard.paginas»
				«var j = 0»
				«FOR casilla: pagina.casillasVerif» 
					public boolean check«i»_«j»() { return check«i»_«j».isSelected(); }
					public void check«i»_«j»(boolean v) { check«i»_«j».setSelected(v); }
					//«j = j + 1»
				«ENDFOR»
				//«i = i + 1»
			«ENDFOR»
			
			//«i = 0»
			«FOR pagina: wizard.paginas»
				«var j = 0»
				«FOR texto: pagina.camposTexto» 
					public String text«i»_«j»() { return text«i»_«j».getText(); }
					public void text«i»_«j»(String v) { text«i»_«j».setText(v); }
					//«j = j + 1»
				«ENDFOR»
				//«i = i + 1»
			«ENDFOR»
			
			public Wizard () {
				super ("«wizard.titulo»");
				
				JPanel page, fields, buttons;
				GridBagConstraints c = new GridBagConstraints();		
				c.ipadx = 10;
				c.anchor = GridBagConstraints.WEST;
				
				// panel containing all pages
				wizard = new JPanel(layout);
				
				//«i = 0»
				«FOR pagina: wizard.paginas»
					fields = new JPanel(new GridBagLayout());
					«var j = 0»
					«var k = 0»
					«FOR campo: pagina.camposTexto»
						JLabel labelt«i»_«j» = new JLabel("«campo.tag»");
						c.gridx = 0;
						c.gridy = «k»;	
						fields.add(labelt«i»_«j», c);
						text«i»_«j»  = new JTextField(10);
						c.gridx = 1;
						c.gridy = «k»;		
						fields.add(text«i»_«j», c);
						//«j = j + 1»
						//«k = k + 2»
					«ENDFOR»
					//«j = 0»
					«FOR casilla: pagina.casillasVerif»
						JLabel labelc«i»_«j» = new JLabel("«casilla.tag»");
						c.gridx = 0;
						c.gridy = «k»;	
						fields.add(labelc«i»_«j», c);
						check«i»_«j»  = new JCheckBox();
						«IF casilla.porDef»
							check«i»_«j».setSelected(true);
						«ENDIF»
						c.gridx = 1;
						c.gridy = «k»;		
						fields.add(check«i»_«j», c);
						//«j = j + 1»
						//«k = k + 1»
					«ENDFOR»
					
					buttons = new JPanel();
					//«j = 0»
					«FOR boton: pagina.botones»
						JButton button«i»_«j» = new JButton("«boton.tag»");
						«IF boton instanceof BotonNavegar»
							button«i»_«j».setActionCommand("button«i»_«j»");
							button«i»_«j».addActionListener(new ChangePageListener(this));
						«ELSEIF boton instanceof BotonCerrar»
							button«i»_«j».addActionListener(new CloseWizardListener(this));
						«ELSEIF boton instanceof BotonMensaje»
							button«i»_«j».addActionListener(new ShowMessageListener(this, "«(boton as BotonMensaje).mensaje»"));
						«ENDIF»
						buttons.add(button«i»_«j»);
						//«j = j + 1»
					«ENDFOR»
					page = new JPanel(new BorderLayout());
					page.add(fields,  BorderLayout.CENTER);
					page.add(buttons, BorderLayout.SOUTH);
					wizard.add(page, PAGE_«i»);
					//«i = i + 1»
				«ENDFOR»
				
				getContentPane().add(wizard);
			}
			
			/**
			 * show wizard
			 */
			public void showWizard() {
				this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
				this.pack();
				this.setVisible(true);
			}
		
			/**
			 * show page of wizard
			 */
			public void showPage(String page) {
				layout.show(wizard, page);
			}
		}
		'''
	}
	
	def compileListener(Wizard wizard) {
		'''
		package listeners;
		
		import java.awt.event.ActionEvent;
		import java.awt.event.ActionListener;
		
		import javax.swing.JOptionPane;
		
		import wizard.Wizard;
		
		public class ChangePageListener implements ActionListener {
			private Wizard window;
			
			public ChangePageListener(Wizard window) {
				this.window = window;
			}
			
			@Override
			public void actionPerformed(ActionEvent arg0) {
			«var i = 0»
			«FOR pagina: wizard.paginas»
				«var j = 0»
				«FOR boton: pagina.botones»
					«IF boton instanceof BotonNavegar»
					if (arg0.getActionCommand().equals("button«i»_«j»")) {
						«var k = 0»
						«FOR campo: pagina.camposTexto»
							«IF !campo.opcional»
								if (window.text«i»_«k»().equals("")) {
									JOptionPane.showMessageDialog(window, "«campo.tag» cannot be empty");
									return;
								}
							«ENDIF»
							//«k = k + 1»
						«ENDFOR»
						«var Pagina defaultDes = null»
						«var notDefault = false»
						«FOR destino: (boton as BotonNavegar).destino»
							«IF destino.casilla === null»
								//«defaultDes = destino.destino»
							«ELSE»
								//«notDefault = true»
								//«k = 0»
								«FOR casilla: pagina.casillasVerif»
									«IF casilla.name.equals(destino.casilla.name)»
										if (window.check«i»_«k»()) {
											«var p = 0»
											«FOR paginaDes: wizard.paginas»
												«IF destino.destino.name.equals(paginaDes.name)»
													window.showPage(Wizard.PAGE_«p»);
												«ENDIF»
												//«p = p + 1»
											«ENDFOR»
										}
									«ENDIF»
									//«k = k + 1»
								«ENDFOR»
							«ENDIF»
						«ENDFOR»
						«IF defaultDes !== null»
							«IF notDefault»
								else {
							«ENDIF»
							«var p = 0»
							«FOR paginaDes: wizard.paginas»
								«IF defaultDes.name.equals(paginaDes.name)»
									window.showPage(Wizard.PAGE_«p»);
								«ENDIF»
								//«p = p + 1»
							«ENDFOR»
							«IF notDefault»
								}
							«ENDIF»
						«ENDIF»
					}
					«ENDIF»
					//«j = j + 1»
				«ENDFOR»
				//«i = i + 1»
			«ENDFOR»
			}
		}
		'''
	}
	
	def compileClose() {
		'''
		package listeners;
		
		import java.awt.event.ActionEvent;
		import java.awt.event.ActionListener;
		import javax.swing.JFrame;
		
		public class CloseWizardListener implements ActionListener {
			private JFrame window;
			
			public CloseWizardListener(JFrame window) {
				this.window = window;
			}
			
			@Override
			public void actionPerformed(ActionEvent arg0) {
				window.setVisible(false);
				window.dispose();
			}
		}
		'''
	}
	
	def compileMessage() {
		'''
		package listeners;
		
		import java.awt.event.ActionEvent;
		import java.awt.event.ActionListener;
		import javax.swing.JFrame;
		import javax.swing.JOptionPane;
		
		public class ShowMessageListener implements ActionListener {
			private JFrame window;
			private String message;
			
			public ShowMessageListener(JFrame window, String message) {
				this.window = window;
				this.message = message;
			}
			
			@Override
			public void actionPerformed(ActionEvent arg0) {
				JOptionPane.showMessageDialog(window, message);
			}
		}
		'''
	}
	
	def compileMain() {
		'''
		package main;
		
		import wizard.Wizard;
		
		public class Main {
			public static void main(String[] args) {
				Wizard wizard = new Wizard();
				wizard.showWizard();
			}
		}
		'''
	}
	
	
	
}
